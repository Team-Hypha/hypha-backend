version: "3.8"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    deploy:
      resources:
        limits:
          memory: 4Gb
    volumes:
      - es_data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    ports:
      - "9200:9200"
      - "9300:9300"

  jaeger-collector:
    image: jaegertracing/jaeger-collector:latest
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
    ports:
      - "14250" # where gateway sends to
      - "14269:14269"
    depends_on:
      - elasticsearch
    restart: always

  jaeger-query:
    image: jaegertracing/jaeger-query:latest
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
    ports:
      - "16685:16685"
      - "16686:16686"
      - "16687:16687"
    depends_on:
      - elasticsearch
    restart: always

  grafana:
    image: gontzess/hypha-grafana:latest
    build: ./hypha-grafana/
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"

  collector:
    image: gontzess/hypha-collector:latest
    build: ./hypha-collector/
    command: ["--config", "/otel-config.yaml"]
    ports:
      - "4317:4317" # grpc  host:container
    depends_on:
      - jaeger-collector
      - loki

  loki-read:
    image: gontzess/hypha-loki:latest
    build: ./hypha-loki/
    command: "-config.file=/etc/loki/config-local.yaml -target=read"
    depends_on:
      - minio

  loki-write:
    image: gontzess/hypha-loki:latest
    build: ./hypha-loki/
    command: "-config.file=/etc/loki/config-local.yaml -target=write"
    depends_on:
      - minio

  minio:
    image: minio/minio
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        mkdir -p /data/loki-ruler && \
        minio server /data
    environment:
      - MINIO_ACCESS_KEY=loki
      - MINIO_SECRET_KEY=supersecret
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    ports:
      - "9000"
    volumes:
      - minio_data:/data

  loki:
    image: nginx:latest
    depends_on:
      - loki-read
      - loki-write
    entrypoint:
      - sh
      - -euc
      - |
        cat <<EOF > /etc/nginx/nginx.conf
        user  nginx;
        worker_processes  5;  ## Default: 1
        events {
          worker_connections   1000;
        }
        http {
          resolver 127.0.0.11;
          ## resolver 169.254.169.253;
          server {
            listen             3100;
            location = / {
              return 200 'OK';
              auth_basic off;
            }
            location = /loki/api/v1/push {
              proxy_pass       http://loki-write:3100\$$request_uri;
            }
            location = /loki/api/v1/tail {
              proxy_pass       http://loki-read:3100\$$request_uri;
              proxy_set_header Upgrade \$$http_upgrade;
              proxy_set_header Connection "upgrade";
            }
            location ~ /loki/api/.* {
              proxy_pass       http://loki-read:3100\$$request_uri;
            }
          }
        }
        EOF
        /docker-entrypoint.sh nginx -g "daemon off;"
    ports:
      - "3100:3100"

  nginx:
    image: gontzess/hypha-nginx:latest
    build: ./hypha-nginx/
    ports:
      - "80:80"

volumes:
  es_data:
  minio_data:
  grafana_data:
